# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: otrikss
# "service" is the name of this project. This will also be added to your AWS resource names.
service: hotel-api

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  environment:
    DYNAMODB_TABLE: HotelTable
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}



package:
  exclude:
    - node_modules/**
    - tests/**
    - docs/**
    - .git/**
    - "*.md"
    - "*.log"
    - "README.md"
    - ".env"
    - .dynamodb/**



resources:
  Resources:
    MyDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST


custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true  # Kör DynamoDB i minnet för snabbare utveckling
      migrate: true   # Skapa tabellen om den inte finns
      seed: true
    seed: 
      domain:
        sources:
          - table: HotelTable
            sources: [./seed-data/hotel-data.json]


plugins:
  - serverless-offline
  - serverless-dynamodb


functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
          path: /
          method: get

  addItem:
    handler: addItem.handler
    events:
      - httpApi:
          path: /items
          method: post

  searchRooms:
    handler: functions/searchRooms/index.handler
    events:
      - http:
          path: search-rooms
          method: GET
          request:
            parameters:
              querystrings:
                guests: true
                startDate: true
                endDate: true

  bookRooms:
    handler: functions/bookRooms/index.handler
    events:
      - http:
          path: book-rooms
          method: POST

  cancel-booking:
    handler: functions/cancelBooking/index.handler
    events:
      - http:
          path: cancel-booking/{id}
          method: DELETE

  retrive-bookings:
    handler: functions/retriveBookings/index.handler
    events:
      - http:
          path: retrive-bookings/
          method: GET
   
